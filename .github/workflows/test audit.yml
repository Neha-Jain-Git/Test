name: Generate Audit Report

on:
  schedule:
    - cron: '30 9 * * *' # Runs daily at 4:30 AM EST (fixed, no DST adjustment)
  workflow_dispatch: {}   # Manual trigger

permissions:
  contents: write
  actions: write

jobs:
  generate-and-push-audit-report:
    runs-on: ubuntu-latest
    env:
      REPORT_FILE: AuditReport_${{ github.run_id }}.csv

    steps:
      - name: Checkout code (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git author
        run: |
          git config user.email "maltss_tech@optum.com"
          git config user.name "maltssdeploy"

      - name: Set Report Date
        run: |
          echo "REPORT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Determine last processed commit
        run: |
          if [ -z "${{ vars.LAST_PROCESSED_COMMIT }}" ]; then
            echo "No LAST_PROCESSED_COMMIT variable found. Using repository root commit."
            value=$(git rev-list --max-parents=0 HEAD)
          else
            value=${{ vars.LAST_PROCESSED_COMMIT }}
          fi
          echo "LAST_PROCESSED_COMMIT=$value" >> $GITHUB_ENV

      # <<< CHANGED: New step to filter commits/files to force-app/main/default only >>>
      - name: Check for changes in force-app/main/default
        run: |
          changed_files=$(git diff --name-only "$LAST_PROCESSED_COMMIT"..HEAD -- force-app/main/default/ || true)
          if [ -z "$changed_files" ]; then
            echo "No changes in force-app/main/default since last run."
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          else
            echo "Found changes in force-app/main/default:"
            echo "$changed_files"
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Generate commit audit report
        if: env.HAS_CHANGES == 'true'
        run: |
          echo "Generating commit audit report..."
          mkdir -p temp
          echo "COMMIT ID,MEMBER EMAIL,DATETIME (IST),COMMENTS,NUMBER OF FILES,NUMBER OF ADDITIONS,NUMBER OF DELETIONS" > temp/AuditReport1.csv
          git log "$LAST_PROCESSED_COMMIT"..HEAD -- force-app/main/default/ \
            --pretty=format:'"%H","%ae","%aD","%s",' --shortstat --no-merges | paste - - - >> temp/AuditReport1.csv
          echo "FILES" > temp/AuditReport2.csv
          git log "$LAST_PROCESSED_COMMIT"..HEAD --name-only --pretty=format:"" -- force-app/main/default/ > temp/AuditReport3.csv
          awk 'NF {TMP=TMP $0; next} {print TMP " "; TMP=" "} END {print TMP " "}' temp/AuditReport3.csv > temp/AuditReport4.csv
          sed -r '/^\s*$/d' temp/AuditReport4.csv > temp/AuditReport5.csv
          paste temp/AuditReport5.csv >> temp/AuditReport2.csv
          paste -d , temp/AuditReport1.csv temp/AuditReport2.csv > temp/AuditReport.csv
          cp temp/AuditReport.csv "$REPORT_FILE"

      # <<< CHANGED: Only update repo variable if HAS_CHANGES is true >>>
      - name: Update LAST_PROCESSED_COMMIT repo variable
        if: env.HAS_CHANGES == 'true'
        run: |
          latest=$(git log -1 --pretty=format:"%H" -- force-app/main/default/)
          echo "Updating repository variable LAST_PROCESSED_COMMIT to $latest"
          gh api \
            -X PATCH \
            "repos/${{ github.repository }}/actions/variables/LAST_PROCESSED_COMMIT" \
            -f name='LAST_PROCESSED_COMMIT' \
            -f value="$latest"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Commit and push report to main
        if: env.HAS_CHANGES == 'true'
        run: |
          echo "Workflow name is: ${{ github.workflow }}"
          git add "$REPORT_FILE"

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-generated audit report (Commit Ref: $LAST_PROCESSED_COMMIT)"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
          fi

      - name: Upload Audit Report as artifact
        if: env.HAS_CHANGES == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: audit-report-${{ env.REPORT_DATE }}
          path: ${{ env.REPORT_FILE }}